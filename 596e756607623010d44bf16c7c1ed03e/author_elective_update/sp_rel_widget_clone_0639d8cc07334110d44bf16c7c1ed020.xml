<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rel_widget_clone">
    <sp_rel_widget_clone action="DELETE">
        <child display_value="My Goals">c63954cc07334110d44bf16c7c1ed0f1</child>
        <cloned>2022-05-26 07:28:42</cloned>
        <last_validated>2022-05-26 07:28:42</last_validated>
        <parent display_value="My Requests">8cc0df25875023000f220cf888cb0bb5</parent>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sp_widget&gt;&lt;category&gt;sc&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function(spAriaUtil, i18n) {
	
	var c = this;
	c.trackPage = function() {
		window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "My Requests Widget Loaded");
	}
	
	if (c.data.is_new_order)
		spAriaUtil.sendLiveMessage(c.data.requestSubmitMsg);
		
	c.viewFilter = 'open';
	
	c.changeView = function() {
		window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "Open/Close Filter Toggled");
		c.server.get({
					action: "change_view",
					view: c.viewFilter,
					search_text: c.filterText
				}).then(function(response){
					c.data = response.data;
				});
	}
	
	c.search = function() {
		c.server.get({
			action: 'search',
			search_text: c.filterText,
			view: c.viewFilter
		}).then(function(response){
					c.data = response.data;
					var resultMsg = (c.data.request.req_list.length == 1 ? 'result' : 'results') + ' returned';
					spAriaUtil.sendLiveMessage(i18n.getMessage('{0} ' + resultMsg).withValues([c.data.request.req_list.length]));
				});
	}
	
	c.checkEnter = function(event) {
		if (event.which === 13)
			c.search();
	}
	
	c.loadMore = function() {
		window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "Show More Clicked");
		spAriaUtil.sendLiveMessage("${Loading more rows}");
		c.fetching = true;
		c.server.get({
			action: 'fetch_more',
			lastLimit: c.data.lastLimit,
			view: c.viewFilter,
			search_text: c.filterText
		}).then(function(response){
					c.data = response.data;
					c.fetching = false;
				});
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.panel-heading {
  position: relative;
  &amp;gt; .fa-filter { 
    position: absolute;
    top: 1rem; 
    right: 1rem; 
  }
}

.panel {
  &amp;gt; .list-group, &amp;gt;.panel-collapse{
    	.list-group-item {
		  	border-width: 1px 0 0 0;
      }
  }
}

.btn-show-more {
  margin-left: auto;
  margin-right: auto;
  display: flex;
}

.control-view {
  display: flex;
}


&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;my-requests-v2&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;My Requests&lt;/name&gt;&lt;option_schema&gt;[{"name":"title","section":"Presentation","default_value":"My Requests","label":"Title","type":"string"},{"name":"show_view","section":"Behavior","default_value":"true","label":"Show View","type":"boolean"},{"hint":"Number of items per page","name":"items_per_page","section":"Behavior","default_value":"15","label":"Items per page","type":"integer"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_internal,snc_external&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function() {
	
	var localInput = input; //to safeguard pullution of "input" via BR or other scripts
	
	var alsoRequest = false;
	
	var msg = data.messages = {};
	msg.myRequestsTitle = options.title? gs.getMessage(options.title) : gs.getMessage('My Requests');
	
	data.filterMsg = gs.getMessage("Search open requests");

	if (localInput &amp;&amp; localInput.view === 'open')
		data.filterMsg = gs.getMessage("Search open requests");
	else if (localInput &amp;&amp; localInput.view === 'close')
		data.filterMsg = gs.getMessage("Search closed requests");
	
	data.is_new_order = (($sp.getParameter("is_new_order") + '') === "true");
	data.requestSubmitMsg = gs.getMessage('Thank You. Your request has been submitted');
	
	function getField(gr, name) {
			var f = {};
			var id = gr.getUniqueValue();
			gr = new GlideRecord(gr.getRecordClassName());
			gr.get(id);
			f.display_value = gr.getDisplayValue(name);
			f.value = gr.getValue(name);
			var ge = gr.getElement(name);
		  if (ge) {
				var ed = ge.getED();
				if (ed)
					f.type = ed.getInternalType();
				f.label = ge.getLabel();
			}
			return f;
	}

	function getMyRequestSysIds() {
		var ids = {};
		var rq_filter = new GlideRecord('request_filter');
		rq_filter.addActiveQuery();
		if (rq_filter.isValidField('applies_to'))
			rq_filter.addQuery('applies_to', 1).addOrCondition('applies_to', 10);
		rq_filter.query();
		while(rq_filter.next()) {
			var tableName = rq_filter.table_name;
			if (rq_filter.isValidField('table'))
				tableName = rq_filter.table;
			var gr = new GlideRecord(tableName);
			gr.addQuery(rq_filter.filter);
			gr.query();
			if (tableName == 'sc_request')
				alsoRequest = true;
			while(gr.next()) {
				var portalSettings = {};
				portalSettings.page = rq_filter.portal_page.nil()? '' : rq_filter.portal_page.getDisplayValue() + '';
				portalSettings.primary_display = rq_filter.primary_display.nil()? '': rq_filter.primary_display + '';
				portalSettings.secondary_displays = rq_filter.secondary_display.nil()? '': rq_filter.secondary_display + '';
				ids[gr.sys_id + ''] = portalSettings;
			}
		}
		return ids;
	}
	
	// retrieve the request's
	var myRequestMap = getMyRequestSysIds();
	var taskIDs = Object.keys(myRequestMap);

	var gr = new GlideRecordSecure('task');
	if (localInput &amp;&amp; localInput.view === 'open') 
		gr.addActiveQuery();
	else if (localInput &amp;&amp; localInput.view === 'close')
		gr.addQuery('active', 0);
	else
		gr.addActiveQuery();

	gr.orderByDesc('sys_updated_on');
	if (localInput &amp;&amp; localInput.search_text) {
			var req = [];
			var task = new GlideRecordSecure('task');
			task.addQuery('123TEXTQUERY321', localInput.search_text);
			if (localInput &amp;&amp; localInput.view === 'open') 
				task.addQuery('active', 1);
			else if (localInput &amp;&amp; localInput.view === 'close')
				task.addQuery('active', 0);
			else
				task.addQuery('active', 1);
			task.addQuery('sys_id', taskIDs);
			task.query();

			while(task.next())
				req.push(task.getUniqueValue());
		
			if (alsoRequest) {
				var ritmGR = new GlideRecord('sc_req_item');
				if (localInput &amp;&amp; localInput.view === 'open') 
					ritmGR.addQuery('request.active', 1);
				else if (localInput &amp;&amp; localInput.view === 'close')
					ritmGR.addQuery('request.active', 0);
				else
					ritmGR.addQuery('request.active', 1);
				ritmGR.addQuery('123TEXTQUERY321', localInput.search_text);
				ritmGR.addQuery('request.sys_id', taskIDs);
				ritmGR.query();
				while(ritmGR.next())
					req.push(ritmGR.getValue('request'));
			}
			gr.addQuery('sys_id', req);
		}
		else 
			gr.addQuery('sys_id', taskIDs);
	gr.query();

	data.request = {};

	data.request.req_list = [];
	var recordIdx = 0;	
	var limit = options.items_per_page? options.items_per_page : 15;
	if (localInput &amp;&amp; localInput.action == 'fetch_more')
		data.lastLimit = localInput.lastLimit + limit;
	else
		data.lastLimit = limit;

	data.hasMore = false;
	while (recordIdx != data.lastLimit &amp;&amp; gr.next()) {
		var portalSettings = myRequestMap[gr.getUniqueValue()];
		if (typeof portalSettings == 'undefined')
			portalSettings = {};

		var record = {};
		record.sys_id = gr.getValue('sys_id');

		if (gr.getRecordClassName() == 'sc_request') {
				var ritm = new GlideRecord("sc_req_item");
				ritm.addQuery("request", gr.getUniqueValue());
				ritm.query();
				if (ritm.getRowCount() == 0)
					continue;
				if (ritm.getRowCount() &gt; 1)
					record.display_field = gs.getMessage("{0} requested items", ritm.getRowCount());
				else {
					ritm.next();
					record.display_field = ritm.cat_item.getDisplayValue() || ritm.getDisplayValue("short_description");
				}
				record.url = { id: portalSettings.page? portalSettings.page: 'sc_request', table: 'sc_request', sys_id: record.sys_id};
		} else {
				record.display_field = portalSettings.primary_display ? getField(gr, portalSettings.primary_display).display_value : getField(gr, 'number').display_value;
				record.url = { id: portalSettings.page? portalSettings.page :'ticket', table: gr.getRecordClassName(), sys_id: record.sys_id};
		}
		if (portalSettings.secondary_displays) {
			record.secondary_displays = [];
			portalSettings.secondary_displays.split(",").forEach(function (sDisplay){
				record.secondary_displays.push(getField(gr, sDisplay));
			});
		}
		else 
			record.secondary_displays = getField(gr, 'short_description');
		
		record.updated_on = gr.getValue('sys_updated_on');
		record.state = gr.getDisplayValue('state');
		if((recordIdx !== 0) &amp;&amp; (data.lastLimit - limit === recordIdx))
			record.highlight = true;

		data.request.req_list.push(record);
		recordIdx++;
	}

	if (gr.next())
			data.hasMore = true;
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;true&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-09-02 11:54:47&lt;/sys_created_on&gt;&lt;sys_id&gt;8cc0df25875023000f220cf888cb0bb5&lt;/sys_id&gt;&lt;sys_mod_count&gt;42&lt;/sys_mod_count&gt;&lt;sys_name&gt;My Requests&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal - Service Catalog v2" source="com.glideapp.servicecatalog.portal"&gt;0423c9cf6d6620100acb70b35343303c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_8cc0df25875023000f220cf888cb0bb5&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-11-19 16:05:53&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="panel panel-default b" ng-init="c.trackPage()"&gt;
 &lt;div class="panel-heading" &gt;
    &lt;h2 class="panel-title"&gt;{{::data.messages.myRequestsTitle}}&lt;/h2&gt;
  &lt;/div&gt; 	
  &lt;div class="panels-container list-group"&gt;
			&lt;div class="list-group-item row" style="margin:0px;border-top:0px;" &gt;
        	&lt;div class="col-md-5" style=""&gt;
            &lt;div class="input-group"&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-md-3 col-xs-5 " style=""&gt;
            &lt;div class="form-inline control-view" ng-if="c.options.show_view == 'true'"&gt;
            	&lt;label class="control-label hidden-xs wrapper-xs " for="view"&gt;${View}&lt;/label&gt;
              &lt;select ng-model="c.viewFilter" id="view" class="sc-basic-select" ng-change="c.changeView()" style="width:80%"&gt;
                &lt;option value="open" selected="true"&gt;${Open}&lt;/option&gt;
                &lt;option value="close"&gt;${Closed}&lt;/option&gt;
              &lt;/select&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-md-4 col-xs-7" style=""&gt;
            &lt;div class="input-group" style="width:100%"&gt;
              &lt;input ng-model="c.filterText" ng-keypress="c.checkEnter($event)"class="form-control" style="width:100%" placeholder="{{data.filterMsg}}" aria-label="{{data.filterMsg}}"&gt;
              &lt;span class="input-group-btn"&gt;
                &lt;button class="btn btn-default" type="button" ng-click="c.search()" title="${Search}" aria-label="${Search}"&gt;
                	&lt;i class="fa fa-search"&gt;&lt;/i&gt;
                &lt;/button&gt;
              &lt;/span&gt;
            &lt;/div&gt;&lt;!-- /input-group --&gt;
              
          &lt;/div&gt;
    	&lt;/div&gt;
    	&lt;div ng-if="c.data.request.req_list.length == 0 &amp;&amp; !c.filterText" class="panel-body panels-container"&gt;
        ${You do not have any requests} 
      &lt;/div&gt;
    	&lt;div ng-if="c.data.request.req_list.length == 0 &amp;&amp; c.filterText" class="panel-body panels-container"&gt;
        ${Search didn't match any requests} 
      &lt;/div&gt;
    &lt;div role="table" class="table table-responsive m-b-none"&gt;
      &lt;div role="rowgroup" class="sr-only"&gt;
        &lt;div role="row"&gt;
	      &lt;span role="columnheader"&gt;${Request}&lt;/span&gt;
	      &lt;span role="columnheader"&gt;${State}&lt;/span&gt;
	      &lt;span role="columnheader"&gt;${Updated}&lt;/span&gt;
       &lt;/div&gt;
      &lt;/div&gt;
      &lt;div role="row" class="list-group-item table-responsive" ng-repeat="item in c.data.request.req_list | limitTo: c.data.lastLimit track by item.sys_id" style="margin:0px" &gt;
        &lt;div role="cell" class="col-xs-6 padder-l-none padder-r-none main-column"&gt;
          &lt;div class="primary-display"&gt;
            &lt;a href="?id={{::item.url.id}}&amp;table={{::item.url.table}}&amp;sys_id={{::item.url.sys_id}}" sn-focus="{{::item.highlight}}"&gt; {{::item.display_field}} &lt;/a&gt;
          &lt;/div&gt;
          &lt;small class="text-muted"&gt;
            &lt;div ng-repeat="f in item.secondary_displays" class="secondary-display"&gt;
              &lt;span &gt;{{::f.display_value}}&lt;/span&gt;
            &lt;/div&gt;
          &lt;/small&gt;
        &lt;/div&gt;
        &lt;div role="cell" class="col-xs-3 padder-l-none padder-r-none state-column"&gt;
          &lt;div class="state"&gt;
            &lt;span&gt; {{::item.state}}&lt;/span&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div role="cell" class="col-xs-3 padder-l-none padder-r-none updated-column"&gt;
          &lt;div class="updated"&gt;
            &lt;i class="fa fa-clock-o" aria-hidden="true" title="${Updated}"&gt;&lt;/i&gt;
            &lt;sn-time-ago timestamp="::item.updated_on"/&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class="col-sm-12 pull-none" ng-if="c.data.hasMore" style="padding-bottom:15px"&gt;
					&lt;div class="text-a-c" ng-if="c.fetching"&gt;
          	&lt;i class="fa fa-spinner fa-pulse fa-2x fa-fw"&gt;&lt;/i&gt;
						&lt;span class="sr-only"&gt;${Loading...}&lt;/span&gt;  
  	      &lt;/div&gt;
          &lt;button class="btn btn-default btn-show-more" ng-click="c.loadMore()"&gt; ${Show More} &lt;/button&gt;  
      &lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;</payload>
        <sys_class_name>sp_rel_widget_clone</sys_class_name>
        <sys_created_by>teodora.radeva</sys_created_by>
        <sys_created_on>2022-05-26 07:28:42</sys_created_on>
        <sys_id>0639d8cc07334110d44bf16c7c1ed020</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>c63954cc07334110d44bf16c7c1ed0f1</sys_name>
        <sys_package display_value="DLH" source="x_463716_dlh">596e756607623010d44bf16c7c1ed03e</sys_package>
        <sys_policy/>
        <sys_scope display_value="DLH">596e756607623010d44bf16c7c1ed03e</sys_scope>
        <sys_update_name>sp_rel_widget_clone_0639d8cc07334110d44bf16c7c1ed020</sys_update_name>
        <sys_updated_by>teodora.radeva</sys_updated_by>
        <sys_updated_on>2022-05-26 07:28:42</sys_updated_on>
    </sp_rel_widget_clone>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="DLH">596e756607623010d44bf16c7c1ed03e</application>
        <file_path/>
        <instance_id>1d64aec2db06f3082f68c597059619f0</instance_id>
        <instance_name>dev87737</instance_name>
        <name>sp_rel_widget_clone_0639d8cc07334110d44bf16c7c1ed020</name>
        <payload><![CDATA[<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_rel_widget_clone"><sp_rel_widget_clone action="INSERT_OR_UPDATE"><child display_value="My Goals">c63954cc07334110d44bf16c7c1ed0f1</child><cloned>2022-05-26 07:28:42</cloned><last_validated>2022-05-26 07:28:42</last_validated><parent display_value="My Requests">8cc0df25875023000f220cf888cb0bb5</parent><payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;sp_widget&gt;&lt;category&gt;sc&lt;/category&gt;&lt;client_script&gt;&lt;![CDATA[function(spAriaUtil, i18n) {
	
	var c = this;
	c.trackPage = function() {
		window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "My Requests Widget Loaded");
	}
	
	if (c.data.is_new_order)
		spAriaUtil.sendLiveMessage(c.data.requestSubmitMsg);
		
	c.viewFilter = 'open';
	
	c.changeView = function() {
		window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "Open/Close Filter Toggled");
		c.server.get({
					action: "change_view",
					view: c.viewFilter,
					search_text: c.filterText
				}).then(function(response){
					c.data = response.data;
				});
	}
	
	c.search = function() {
		c.server.get({
			action: 'search',
			search_text: c.filterText,
			view: c.viewFilter
		}).then(function(response){
					c.data = response.data;
					var resultMsg = (c.data.request.req_list.length == 1 ? 'result' : 'results') + ' returned';
					spAriaUtil.sendLiveMessage(i18n.getMessage('{0} ' + resultMsg).withValues([c.data.request.req_list.length]));
				});
	}
	
	c.checkEnter = function(event) {
		if (event.which === 13)
			c.search();
	}
	
	c.loadMore = function() {
		window.GlideWebAnalytics.trackEvent("Service Catalog", "Catalog My Requests", "Show More Clicked");
		spAriaUtil.sendLiveMessage("${Loading more rows}");
		c.fetching = true;
		c.server.get({
			action: 'fetch_more',
			lastLimit: c.data.lastLimit,
			view: c.viewFilter,
			search_text: c.filterText
		}).then(function(response){
					c.data = response.data;
					c.fetching = false;
				});
	}
}]]&gt;&lt;/client_script&gt;&lt;controller_as&gt;c&lt;/controller_as&gt;&lt;css&gt;.panel-heading {
  position: relative;
  &amp;gt; .fa-filter { 
    position: absolute;
    top: 1rem; 
    right: 1rem; 
  }
}

.panel {
  &amp;gt; .list-group, &amp;gt;.panel-collapse{
    	.list-group-item {
		  	border-width: 1px 0 0 0;
      }
  }
}

.btn-show-more {
  margin-left: auto;
  margin-right: auto;
  display: flex;
}

.control-view {
  display: flex;
}


&lt;/css&gt;&lt;data_table&gt;sp_instance&lt;/data_table&gt;&lt;demo_data/&gt;&lt;description/&gt;&lt;docs/&gt;&lt;field_list/&gt;&lt;has_preview&gt;false&lt;/has_preview&gt;&lt;id&gt;my-requests-v2&lt;/id&gt;&lt;internal&gt;false&lt;/internal&gt;&lt;link&gt;&lt;![CDATA[function link(scope, element, attrs, controller) {  }]]&gt;&lt;/link&gt;&lt;name&gt;My Requests&lt;/name&gt;&lt;option_schema&gt;[{"name":"title","section":"Presentation","default_value":"My Requests","label":"Title","type":"string"},{"name":"show_view","section":"Behavior","default_value":"true","label":"Show View","type":"boolean"},{"hint":"Number of items per page","name":"items_per_page","section":"Behavior","default_value":"15","label":"Items per page","type":"integer"}]&lt;/option_schema&gt;&lt;public&gt;false&lt;/public&gt;&lt;roles&gt;snc_internal,snc_external&lt;/roles&gt;&lt;script&gt;&lt;![CDATA[(function() {
	
	var localInput = input; //to safeguard pullution of "input" via BR or other scripts
	
	var alsoRequest = false;
	
	var msg = data.messages = {};
	msg.myRequestsTitle = options.title? gs.getMessage(options.title) : gs.getMessage('My Requests');
	
	data.filterMsg = gs.getMessage("Search open requests");

	if (localInput &amp;&amp; localInput.view === 'open')
		data.filterMsg = gs.getMessage("Search open requests");
	else if (localInput &amp;&amp; localInput.view === 'close')
		data.filterMsg = gs.getMessage("Search closed requests");
	
	data.is_new_order = (($sp.getParameter("is_new_order") + '') === "true");
	data.requestSubmitMsg = gs.getMessage('Thank You. Your request has been submitted');
	
	function getField(gr, name) {
			var f = {};
			var id = gr.getUniqueValue();
			gr = new GlideRecord(gr.getRecordClassName());
			gr.get(id);
			f.display_value = gr.getDisplayValue(name);
			f.value = gr.getValue(name);
			var ge = gr.getElement(name);
		  if (ge) {
				var ed = ge.getED();
				if (ed)
					f.type = ed.getInternalType();
				f.label = ge.getLabel();
			}
			return f;
	}

	function getMyRequestSysIds() {
		var ids = {};
		var rq_filter = new GlideRecord('request_filter');
		rq_filter.addActiveQuery();
		if (rq_filter.isValidField('applies_to'))
			rq_filter.addQuery('applies_to', 1).addOrCondition('applies_to', 10);
		rq_filter.query();
		while(rq_filter.next()) {
			var tableName = rq_filter.table_name;
			if (rq_filter.isValidField('table'))
				tableName = rq_filter.table;
			var gr = new GlideRecord(tableName);
			gr.addQuery(rq_filter.filter);
			gr.query();
			if (tableName == 'sc_request')
				alsoRequest = true;
			while(gr.next()) {
				var portalSettings = {};
				portalSettings.page = rq_filter.portal_page.nil()? '' : rq_filter.portal_page.getDisplayValue() + '';
				portalSettings.primary_display = rq_filter.primary_display.nil()? '': rq_filter.primary_display + '';
				portalSettings.secondary_displays = rq_filter.secondary_display.nil()? '': rq_filter.secondary_display + '';
				ids[gr.sys_id + ''] = portalSettings;
			}
		}
		return ids;
	}
	
	// retrieve the request's
	var myRequestMap = getMyRequestSysIds();
	var taskIDs = Object.keys(myRequestMap);

	var gr = new GlideRecordSecure('task');
	if (localInput &amp;&amp; localInput.view === 'open') 
		gr.addActiveQuery();
	else if (localInput &amp;&amp; localInput.view === 'close')
		gr.addQuery('active', 0);
	else
		gr.addActiveQuery();

	gr.orderByDesc('sys_updated_on');
	if (localInput &amp;&amp; localInput.search_text) {
			var req = [];
			var task = new GlideRecordSecure('task');
			task.addQuery('123TEXTQUERY321', localInput.search_text);
			if (localInput &amp;&amp; localInput.view === 'open') 
				task.addQuery('active', 1);
			else if (localInput &amp;&amp; localInput.view === 'close')
				task.addQuery('active', 0);
			else
				task.addQuery('active', 1);
			task.addQuery('sys_id', taskIDs);
			task.query();

			while(task.next())
				req.push(task.getUniqueValue());
		
			if (alsoRequest) {
				var ritmGR = new GlideRecord('sc_req_item');
				if (localInput &amp;&amp; localInput.view === 'open') 
					ritmGR.addQuery('request.active', 1);
				else if (localInput &amp;&amp; localInput.view === 'close')
					ritmGR.addQuery('request.active', 0);
				else
					ritmGR.addQuery('request.active', 1);
				ritmGR.addQuery('123TEXTQUERY321', localInput.search_text);
				ritmGR.addQuery('request.sys_id', taskIDs);
				ritmGR.query();
				while(ritmGR.next())
					req.push(ritmGR.getValue('request'));
			}
			gr.addQuery('sys_id', req);
		}
		else 
			gr.addQuery('sys_id', taskIDs);
	gr.query();

	data.request = {};

	data.request.req_list = [];
	var recordIdx = 0;	
	var limit = options.items_per_page? options.items_per_page : 15;
	if (localInput &amp;&amp; localInput.action == 'fetch_more')
		data.lastLimit = localInput.lastLimit + limit;
	else
		data.lastLimit = limit;

	data.hasMore = false;
	while (recordIdx != data.lastLimit &amp;&amp; gr.next()) {
		var portalSettings = myRequestMap[gr.getUniqueValue()];
		if (typeof portalSettings == 'undefined')
			portalSettings = {};

		var record = {};
		record.sys_id = gr.getValue('sys_id');

		if (gr.getRecordClassName() == 'sc_request') {
				var ritm = new GlideRecord("sc_req_item");
				ritm.addQuery("request", gr.getUniqueValue());
				ritm.query();
				if (ritm.getRowCount() == 0)
					continue;
				if (ritm.getRowCount() &gt; 1)
					record.display_field = gs.getMessage("{0} requested items", ritm.getRowCount());
				else {
					ritm.next();
					record.display_field = ritm.cat_item.getDisplayValue() || ritm.getDisplayValue("short_description");
				}
				record.url = { id: portalSettings.page? portalSettings.page: 'sc_request', table: 'sc_request', sys_id: record.sys_id};
		} else {
				record.display_field = portalSettings.primary_display ? getField(gr, portalSettings.primary_display).display_value : getField(gr, 'number').display_value;
				record.url = { id: portalSettings.page? portalSettings.page :'ticket', table: gr.getRecordClassName(), sys_id: record.sys_id};
		}
		if (portalSettings.secondary_displays) {
			record.secondary_displays = [];
			portalSettings.secondary_displays.split(",").forEach(function (sDisplay){
				record.secondary_displays.push(getField(gr, sDisplay));
			});
		}
		else 
			record.secondary_displays = getField(gr, 'short_description');
		
		record.updated_on = gr.getValue('sys_updated_on');
		record.state = gr.getDisplayValue('state');
		if((recordIdx !== 0) &amp;&amp; (data.lastLimit - limit === recordIdx))
			record.highlight = true;

		data.request.req_list.push(record);
		recordIdx++;
	}

	if (gr.next())
			data.hasMore = true;
})();]]&gt;&lt;/script&gt;&lt;servicenow&gt;true&lt;/servicenow&gt;&lt;sys_class_name&gt;sp_widget&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-09-02 11:54:47&lt;/sys_created_on&gt;&lt;sys_id&gt;8cc0df25875023000f220cf888cb0bb5&lt;/sys_id&gt;&lt;sys_mod_count&gt;42&lt;/sys_mod_count&gt;&lt;sys_name&gt;My Requests&lt;/sys_name&gt;&lt;sys_package display_value="Service Portal - Service Catalog v2" source="com.glideapp.servicecatalog.portal"&gt;0423c9cf6d6620100acb70b35343303c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Global"&gt;global&lt;/sys_scope&gt;&lt;sys_update_name&gt;sp_widget_8cc0df25875023000f220cf888cb0bb5&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2020-11-19 16:05:53&lt;/sys_updated_on&gt;&lt;template&gt;&lt;![CDATA[&lt;div class="panel panel-default b" ng-init="c.trackPage()"&gt;
 &lt;div class="panel-heading" &gt;
    &lt;h2 class="panel-title"&gt;{{::data.messages.myRequestsTitle}}&lt;/h2&gt;
  &lt;/div&gt; 	
  &lt;div class="panels-container list-group"&gt;
			&lt;div class="list-group-item row" style="margin:0px;border-top:0px;" &gt;
        	&lt;div class="col-md-5" style=""&gt;
            &lt;div class="input-group"&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-md-3 col-xs-5 " style=""&gt;
            &lt;div class="form-inline control-view" ng-if="c.options.show_view == 'true'"&gt;
            	&lt;label class="control-label hidden-xs wrapper-xs " for="view"&gt;${View}&lt;/label&gt;
              &lt;select ng-model="c.viewFilter" id="view" class="sc-basic-select" ng-change="c.changeView()" style="width:80%"&gt;
                &lt;option value="open" selected="true"&gt;${Open}&lt;/option&gt;
                &lt;option value="close"&gt;${Closed}&lt;/option&gt;
              &lt;/select&gt;
            &lt;/div&gt;
          &lt;/div&gt;
          &lt;div class="col-md-4 col-xs-7" style=""&gt;
            &lt;div class="input-group" style="width:100%"&gt;
              &lt;input ng-model="c.filterText" ng-keypress="c.checkEnter($event)"class="form-control" style="width:100%" placeholder="{{data.filterMsg}}" aria-label="{{data.filterMsg}}"&gt;
              &lt;span class="input-group-btn"&gt;
                &lt;button class="btn btn-default" type="button" ng-click="c.search()" title="${Search}" aria-label="${Search}"&gt;
                	&lt;i class="fa fa-search"&gt;&lt;/i&gt;
                &lt;/button&gt;
              &lt;/span&gt;
            &lt;/div&gt;&lt;!-- /input-group --&gt;
              
          &lt;/div&gt;
    	&lt;/div&gt;
    	&lt;div ng-if="c.data.request.req_list.length == 0 &amp;&amp; !c.filterText" class="panel-body panels-container"&gt;
        ${You do not have any requests} 
      &lt;/div&gt;
    	&lt;div ng-if="c.data.request.req_list.length == 0 &amp;&amp; c.filterText" class="panel-body panels-container"&gt;
        ${Search didn't match any requests} 
      &lt;/div&gt;
    &lt;div role="table" class="table table-responsive m-b-none"&gt;
      &lt;div role="rowgroup" class="sr-only"&gt;
        &lt;div role="row"&gt;
	      &lt;span role="columnheader"&gt;${Request}&lt;/span&gt;
	      &lt;span role="columnheader"&gt;${State}&lt;/span&gt;
	      &lt;span role="columnheader"&gt;${Updated}&lt;/span&gt;
       &lt;/div&gt;
      &lt;/div&gt;
      &lt;div role="row" class="list-group-item table-responsive" ng-repeat="item in c.data.request.req_list | limitTo: c.data.lastLimit track by item.sys_id" style="margin:0px" &gt;
        &lt;div role="cell" class="col-xs-6 padder-l-none padder-r-none main-column"&gt;
          &lt;div class="primary-display"&gt;
            &lt;a href="?id={{::item.url.id}}&amp;table={{::item.url.table}}&amp;sys_id={{::item.url.sys_id}}" sn-focus="{{::item.highlight}}"&gt; {{::item.display_field}} &lt;/a&gt;
          &lt;/div&gt;
          &lt;small class="text-muted"&gt;
            &lt;div ng-repeat="f in item.secondary_displays" class="secondary-display"&gt;
              &lt;span &gt;{{::f.display_value}}&lt;/span&gt;
            &lt;/div&gt;
          &lt;/small&gt;
        &lt;/div&gt;
        &lt;div role="cell" class="col-xs-3 padder-l-none padder-r-none state-column"&gt;
          &lt;div class="state"&gt;
            &lt;span&gt; {{::item.state}}&lt;/span&gt;
          &lt;/div&gt;
        &lt;/div&gt;
        &lt;div role="cell" class="col-xs-3 padder-l-none padder-r-none updated-column"&gt;
          &lt;div class="updated"&gt;
            &lt;i class="fa fa-clock-o" aria-hidden="true" title="${Updated}"&gt;&lt;/i&gt;
            &lt;sn-time-ago timestamp="::item.updated_on"/&gt;
          &lt;/div&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class="col-sm-12 pull-none" ng-if="c.data.hasMore" style="padding-bottom:15px"&gt;
					&lt;div class="text-a-c" ng-if="c.fetching"&gt;
          	&lt;i class="fa fa-spinner fa-pulse fa-2x fa-fw"&gt;&lt;/i&gt;
						&lt;span class="sr-only"&gt;${Loading...}&lt;/span&gt;  
  	      &lt;/div&gt;
          &lt;button class="btn btn-default btn-show-more" ng-click="c.loadMore()"&gt; ${Show More} &lt;/button&gt;  
      &lt;/div&gt;]]&gt;&lt;/template&gt;&lt;/sp_widget&gt;</payload><sys_class_name>sp_rel_widget_clone</sys_class_name><sys_created_by>teodora.radeva</sys_created_by><sys_created_on>2022-05-26 07:28:42</sys_created_on><sys_id>0639d8cc07334110d44bf16c7c1ed020</sys_id><sys_mod_count>0</sys_mod_count><sys_name>c63954cc07334110d44bf16c7c1ed0f1</sys_name><sys_package display_value="DLH" source="x_463716_dlh">596e756607623010d44bf16c7c1ed03e</sys_package><sys_policy/><sys_scope display_value="DLH">596e756607623010d44bf16c7c1ed03e</sys_scope><sys_update_name>sp_rel_widget_clone_0639d8cc07334110d44bf16c7c1ed020</sys_update_name><sys_updated_by>teodora.radeva</sys_updated_by><sys_updated_on>2022-05-26 07:28:42</sys_updated_on></sp_rel_widget_clone></record_update>]]></payload>
        <payload_hash>-1832224964</payload_hash>
        <record_name>c63954cc07334110d44bf16c7c1ed0f1</record_name>
        <reverted_from/>
        <source>959da94107ee0110d44bf16c7c1ed0fc</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>teodora.radeva</sys_created_by>
        <sys_created_on>2022-05-26 21:02:26</sys_created_on>
        <sys_id>0a731f0c07bb4110d44bf16c7c1ed0da</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>181022d866d0000001</sys_recorded_at>
        <sys_updated_by>teodora.radeva</sys_updated_by>
        <sys_updated_on>2022-05-26 21:02:26</sys_updated_on>
        <type>Widget Clone</type>
        <update_guid>02731f0c45bb41103b1e239f360c57da</update_guid>
        <update_guid_history>02731f0c45bb41103b1e239f360c57da:-1832224964,7f821fc8a3bb411039625e80afcb46da:340340476,8239d8ccc33341106f6e1ea40b7b7d22:-964715222</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete display_value="">2fa4df4c07bb4110d44bf16c7c1ed0ad</sys_audit_delete>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>teodora.radeva</sys_created_by>
        <sys_created_on>2022-05-26 21:07:44</sys_created_on>
        <sys_db_object display_value="" name="sp_rel_widget_clone">sp_rel_widget_clone</sys_db_object>
        <sys_id>4e48c5700f17495f9796a1fd0f2b9921</sys_id>
        <sys_metadata>0639d8cc07334110d44bf16c7c1ed020</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>c63954cc07334110d44bf16c7c1ed0f1</sys_name>
        <sys_package display_value="DLH" source="x_463716_dlh">596e756607623010d44bf16c7c1ed03e</sys_package>
        <sys_parent/>
        <sys_policy/>
        <sys_scope display_value="DLH">596e756607623010d44bf16c7c1ed03e</sys_scope>
        <sys_scope_delete display_value="">011918382f754bdf81628cb5cbdc96c1</sys_scope_delete>
        <sys_update_name>sp_rel_widget_clone_0639d8cc07334110d44bf16c7c1ed020</sys_update_name>
        <sys_update_version display_value="sp_rel_widget_clone_0639d8cc07334110d44bf16c7c1ed020">0a731f0c07bb4110d44bf16c7c1ed0da</sys_update_version>
        <sys_updated_by>teodora.radeva</sys_updated_by>
        <sys_updated_on>2022-05-26 21:07:44</sys_updated_on>
    </sys_metadata_delete>
</record_update>
